name: Build Images
run-name: "[${{ github.repository }}] Build & Push Images"
on:
  - push
jobs:
  skip_check:
    runs-on: ubuntu-latest
    outputs:
      paths_result: ${{ steps.skip_check.outputs.paths_result }}
    steps:
      - id: skip_check
        uses: fkirc/skip-duplicate-actions@v5.3.0
        with:
          paths_filter: |
            airflow:
              paths: ["airflow/**"]
            querybook:
              paths: ["querybook/**"]
            spark:
              paths: ["spark/**"]
  build_airflow:
    needs: skip_check
    if: contains(github.event.head_commit.message, '[airflow]') || !fromJSON(needs.skip_check.outputs.paths_result).airflow.should_skip
    runs-on: ubuntu-latest
    strategy:
      matrix:
        airflow_version: 
          - "2.4.3"
        python_version:
          - "3.10"
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          push: true
          tags: ingtranet/airflow:${{ matrix.airflow_version }}-python${{ matrix.python_version }}
          build-args: |
            AIRFLOW_VERSION=${{ matrix.airflow_version }}
            PYTHON_VERSION=${{ matrix.python_version }}
          context: airflow
  build_querybook:
    needs: skip_check
    if: contains(github.event.head_commit.message, '[querybook]') || !fromJSON(needs.skip_check.outputs.paths_result).querybook.should_skip
    runs-on: ubuntu-latest
    strategy:
      matrix:
        querybook_version: 
          - "3.18.0"
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          push: true
          tags: ingtranet/querybook:${{ matrix.querybook_version }}
          build-args: |
            QUERYBOOK_VERSION=${{ matrix.querybook_version }}
          context: querybook
  build_spark:
    needs: skip_check
    if: contains(github.event.head_commit.message, '[spark]') || !fromJSON(needs.skip_check.outputs.paths_result).spark.should_skip
    runs-on: ubuntu-latest
    strategy:
      matrix:
        spark_version:
          - "3.3.1"
        scala_version:
          - "2.12"
          - "2.13"
        java_version:
          - "11"
          - "17"
        iceberg_version:
          - "1.1.0"
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          push: true
          tags: ingtranet/spark:${{ matrix.spark_version }}-scala${{ matrix.scala_version }}-java${{ matrix.java_version }}-iceberg${{ matrix.iceberg_version }}
          build-args: |
            SPARK_VERSION=${{ matrix.spark_version }}
            SCALA_VERSION=${{ matrix.scala_version }}
            JAVA_VERSION=${{ matrix.java_version }}
            ICEBERG_VERSION=${{ matrix.iceberg_version }}
          context: spark