name: Build Images
run-name: "[${{ github.repository }}] Build & Push Images"
on:
  - push
jobs:
  skip_check:
    runs-on: ubuntu-latest
    outputs:
      paths_result: ${{ steps.skip_check.outputs.paths_result }}
    steps:
      - id: skip_check
        uses: fkirc/skip-duplicate-actions@v5.3.0
        with:
          paths_filter: |
            airflow:
              paths: ["airflow/**"]
            caddy:
              paths: ["caddy/**"]
            k0s:
              paths: ["k0s/**"]
            kyuubi:
              paths: ["kyuubi/**"]
            opensearch-dashboards:
              paths: ["opensearch-dashboards/**"]
            querybook:
              paths: ["querybook/**"]
            spark:
              paths: ["spark/**"]
  build_airflow:
    needs: skip_check
    if: contains(github.event.head_commit.message, '[airflow]') || !fromJSON(needs.skip_check.outputs.paths_result).airflow.should_skip
    runs-on: ubuntu-latest
    strategy:
      matrix:
        airflow_version: 
          - "2.4.3"
        python_version:
          - "3.10"
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      - name: Build & PUSH
        uses: docker/build-push-action@v4
        with:
          push: true
          tags: ingtranet/airflow:${{ matrix.airflow_version }}-python${{ matrix.python_version }}
          build-args: |
            AIRFLOW_VERSION=${{ matrix.airflow_version }}
            PYTHON_VERSION=${{ matrix.python_version }}
          context: airflow
          platforms: linux/amd64,linux/arm64
  build_caddy:
    needs: skip_check
    if: contains(github.event.head_commit.message, '[caddy]') || !fromJSON(needs.skip_check.outputs.paths_result).caddy.should_skip
    runs-on: ubuntu-latest
    strategy:
      matrix:
        caddy_version:
          - "2.6.4"
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      - name: Build & Push
        uses: docker/build-push-action@v4
        with:
          push: true
          tags: ingtranet/caddy:${{ matrix.caddy_version }}
          build-args: |
            CADDY_VERSION=${{ matrix.caddy_version }}
          context: caddy
          platforms: linux/amd64,linux/arm64
  build_k0s:
    needs: skip_check
    if: contains(github.event.head_commit.message, '[k0s]') || !fromJSON(needs.skip_check.outputs.paths_result).k0s.should_skip
    runs-on: ubuntu-latest
    strategy:
      matrix:
        k0s_version:
          - v1.27.1+k0s.0
        type:
          - rocky
          - l4t
        include:
          - type: rocky
            image_version: 9.1.20230215
            platforms: linux/amd64,linux/arm64
          - type: l4t
            image_version: r35.1.0
            platforms: linux/arm64
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      - name: Replace + to - in k0s_version\
        env:
          K0S_VERSION: ${{ matrix.k0s_version }}
        run: |
          export K0S_IMAGE_TAG=${K0S_VERSION//+/-}
      - name: Build & Push
        uses: docker/build-push-action@v4
        with:
          push: true
          tags: ingtranet/k0s:${{ env.K0S_IMAGE_TAG }}-${{ matrix.type }}-${{ matrix.image_version }}
          build-args: |
            K0S_VERSION=${{ matrix.k0s_version }}
            IMAGE_VERSION=${{ matrix.image_version }}
          context: k0s
          file: k0s/Dockerfile-${{ matrix.type }}
          platforms: ${{ matrix.platforms }}
  build_kyuubi:
    needs: [skip_check]
    if: contains(github.event.head_commit.message, '[kyuubi]') || !fromJSON(needs.skip_check.outputs.paths_result).kyuubi.should_skip
    runs-on: ubuntu-latest
    strategy:
      matrix:
        kyuubi_version:
          - "1.7.0"
        spark_image:
          - "ingtranet/spark"
        spark_tag:
          - "3.3.2-scala2.12-java11-iceberg1.2.0"
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      - name: Build
        run: cd kyuubi && ./build.sh
        env:
          KYUUBI_VERSION: ${{ matrix.kyuubi_version }}
          SPARK_IMAGE: ${{ matrix.spark_image }}
          SPARK_TAG: ${{ matrix.spark_tag }}
      - name: Push
        run: |
          docker tag ingtranet/kyuubi:latest ingtranet/kyuubi:${{ matrix.kyuubi_version }}-spark${{ matrix.spark_tag }}
          docker push ingtranet/kyuubi:${{ matrix.kyuubi_version }}-spark${{ matrix.spark_tag }}
  build_opensearch_dashboards:
    needs: skip_check
    if: contains(github.event.head_commit.message, '[opensearch-dashboards]') || !fromJSON(needs.skip_check.outputs.paths_result).opensearch-dashboards.should_skip
    runs-on: ubuntu-latest
    strategy:
      matrix:
        opensearch_dashboards_version: 
          - "2.6.0"
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      - name: Build & Push
        uses: docker/build-push-action@v4
        with:
          push: true
          tags: ingtranet/opensearch-dashboards:${{ matrix.opensearch_dashboards_version }}
          build-args: |
            OPENSEARCH_DASHBOARDS_VERSION=${{ matrix.opensearch_dashboards_version }}
          context: opensearch-dashboards
          platforms: linux/amd64,linux/arm64
  build_querybook:
    needs: skip_check
    if: contains(github.event.head_commit.message, '[querybook]') || !fromJSON(needs.skip_check.outputs.paths_result).querybook.should_skip
    runs-on: ubuntu-latest
    strategy:
      matrix:
        querybook_version: 
          - "3.18.0"
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      - name: Build & Push
        uses: docker/build-push-action@v4
        with:
          push: true
          tags: ingtranet/querybook:${{ matrix.querybook_version }}
          build-args: |
            QUERYBOOK_VERSION=${{ matrix.querybook_version }}
          context: querybook
          platforms: linux/amd64,linux/arm64
  build_spark:
    needs: skip_check
    if: contains(github.event.head_commit.message, '[spark]') || !fromJSON(needs.skip_check.outputs.paths_result).spark.should_skip
    runs-on: ubuntu-latest
    strategy:
      matrix:
        spark_version:
          - "3.3.2"
        scala_version:
          - "2.12"
        java_version:
          - "11"
        iceberg_version:
          - "1.2.1"
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      - name: Build & Push
        uses: docker/build-push-action@v4
        with:
          push: true
          tags: ingtranet/spark:${{ matrix.spark_version }}-scala${{ matrix.scala_version }}-java${{ matrix.java_version }}-iceberg${{ matrix.iceberg_version }}
          build-args: |
            SPARK_VERSION=${{ matrix.spark_version }}
            SCALA_VERSION=${{ matrix.scala_version }}
            JAVA_VERSION=${{ matrix.java_version }}
            ICEBERG_VERSION=${{ matrix.iceberg_version }}
          context: spark
          platforms: linux/amd64,linux/arm64
